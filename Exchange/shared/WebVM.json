{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "shutDownTime": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "1200",
      "metadata": {
        "description": "Global shut Down Time for VM's Created"
      }
    },
    "startUpTime": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "1200",
      "metadata": {
        "description": "Global Start Up Time for VM's Created"
      }
    },
    "configureAutoStartStop": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "no",
      "metadata": {
        "description": "Determines if auto Start and Stop is configured on VMs"
      }
    },
    "baseTemplateUri": {
      "type": "string",
      "metadata": {
        "description": "Base URI of template resources."
      }
    },
    "subnetID": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "vmStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Storage reference for VM "
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ManangementWeb"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D1_v2"
    },
    "webServerCount": {
      "type": "int",
      "defaultValue": 2
    },
    "webLBIP": {
      "type": "string"
    }
  },
  "variables": {
    "webAvailabilitySet": "WebappAvSet",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "vmImageOffer": "WindowsServer",
    "vmSku": "2012-R2-Datacenter",
    "vmExtWebLoadBalancerName": "ExtWebLB",
    "vmIntWebLoadBalancerName": "IntWebLB"
    
  },
  "resources": [
    {
      "name": "vmRedisWebNic",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [

      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetID')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              
            }
          }
        ]
      }
    },
    {
      "name": "vmRedisWeb",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vmRedisWebNic')]"

      ],
      "properties": {
        "osProfile": {
          "computerName": "vmRedisWeb",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_A1"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "bitnami",
            "offer": "redis",
            "sku": "redis",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "vhd": {
              "uri": "[concat(concat(reference(resourceId( 'Microsoft.Storage/storageAccounts', parameters('vmStorageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), 'vmRedisWebOSdisk', '.vhd')]"
            },
            "name": "vmRedisWeb"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vmRedisWebNic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', parameters('vmStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
          }
        }
      },
      "plan": {
        "name": "redis",
        "publisher": "bitnami",
        "product": "redis"
      },
      "resources": [
        {
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-','vmRedisWeb')]",
          "apiVersion": "2016-05-15",
          "location": "[resourceGroup().location]",
          "condition": "[equals(parameters('configureAutoStartStop'),'yes')]",
          "scale": null,
          "tags": {
            "displayName": "Shutdown"
          },
          "properties": {
            "dailyRecurrence": {
              "time": "[parameters('shutDownTime')]"
            },
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 30
            },
            "provisioningState": "Succeeded",
            "status": "Enabled",
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', 'vmRedisWeb')]",
            "taskType": "ComputeVmShutdownTask",
            "timeZoneId": "UTC"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'vmRedisWeb')]"
          ]
        }
      ]
    },
    
    
    {
      "name": "[variables('vmIntWebLoadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [

      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "privateIPAddress": "[parameters('webLBIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[parameters('subnetID')]"
              }
            },
            "name": "FrontEndWebPool"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackEndWebPool"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('vmIntWebLoadBalancerName')),'/frontendIpConfigurations/FrontEndWebPool')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('vmIntWebLoadBalancerName')),'/backendAddressPools/BackEndWebPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('vmIntWebLoadBalancerName')),'/probes/web-lb-probe')]"

              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "name": "web-lb-rule"
          }

        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "web-lb-probe"
          }

        ]
      }


    },
    {
      "name": "[concat('vmWeb','-',copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "count": 2,
        "name": "vmWebCopy"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat('Web','-',copyIndex(),'-nic-0'))]",
        "[resourceId('Microsoft.Compute/availabilitySets',  variables('webAvailabilitySet'))]"
      ],
      "tags": {
        "displayName": "vmWeb"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat('vmWeb-',copyIndex())]",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('vmImageOffer')]",
            "publisher": "[variables('vmImagePublisher')]",
            "sku": "[variables('vmSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('Web','-',copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('vmStorageAccountName')), '2016-01-01').primaryEndpoints.blob, 'vhds', '/', 'web-',copyIndex(),'-OSDisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('Web','-',copyIndex(),'-nic-0'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',concat('vmWeb','-',copyIndex()))]",
          "apiVersion": "2016-05-15",
          "location": "[resourceGroup().location]",
          "condition": "[equals(parameters('configureAutoStartStop'),'yes')]",
          "scale": null,
          "tags": {
            "displayName": "Shutdown"
          },
          "properties": {
            "dailyRecurrence": {
              "time": "[parameters('shutDownTime')]"
            },
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 30
            },
            "provisioningState": "Succeeded",
            "status": "Enabled",
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat('vmWeb','-',copyIndex()))]",
            "taskType": "ComputeVmShutdownTask",
            "timeZoneId": "UTC"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat('vmWeb','-',copyIndex()))]"
          ]
        },
        {
          "name": "IIS",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat('vmWeb','-',copyIndex()))]"
          ],
          "tags": {
            "displayName": "IIS"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('baseTemplateUri'), '/dsc/', 'ExchangeWebServer.zip')]",
                "script": "ExchangeWebServer.ps1",
                "function": "ExchangeWebServer"
              },
              "configurationArguments": {
                "MachineName": "[concat('vmWeb-',copyIndex())]"
              },
              "modulesUrl": "",
              "configurationFunction": ""
            },
            "protectedSettings": {

            }
          }
        }
      ]
    },
    {
      "name": "[concat('Web','-',copyIndex(),'-nic-0')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "copy": {
        "count": "[parameters('webServerCount')]",
        "name": "vmAppNicCopy"
      },
      "dependsOn": [
      ],
      "tags": {
        "displayName": "vmWebNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetID')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('webAvailabilitySet')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      },
      "tags": {
        "displayName": "WebAvailabilitySet"
      }
    }
  ],
  "outputs": {
  }
}
