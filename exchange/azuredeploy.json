{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "shutDownTime": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "0400",
      "metadata": {
        "description": "Global shut Down Time for VM's Created"
      }
    },
    "startUpTime": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "1200",
      "metadata": {
        "description": "Global Start Up Time for VM's Created"
      }
    },
    "configureAutoStartStop": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "no",
      "metadata": {
        "description": "Determines if auto Start and Stop is configured on VMs"
      }
    },
    "baseTemplateUri": {
      "type": "string",
      "metadata": {
        "description": "Base URI of template resources."
      }
    },
    "deployTestVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the Test VM instances are deployed"
      },
      "defaultValue": "no"
    },
    "deployVNET": {
      "type": "string",
      "metadata": {
        "description": "Controls if the SB VMVnet Instance is deployed Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployStorage": {
      "type": "string",
      "metadata": {
        "description": "Controls if the Storage is deployed"
      },
      "defaultValue": "no"
    },
    "deployGENPOPSBVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the SB VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployCHASESBVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the SB VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployWFSBVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the SB VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployBACSBVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the SB VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deploySRVVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the Service VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployWebVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the Web VM Instances are Deployed"
      },
      "defaultValue": "no"
    },
    "deployAGSVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the AGS Instance is Deployed"
      },
      "defaultValue": "no"
    },
    "deployMgtVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the Managment VM Instance is Deployed"
      },
      "defaultValue": "no"
    },
    "deployDBVM": {
      "type": "string",
      "metadata": {
        "description": "Controls if the DB Main VM Instance is Deployed"
      },
      "defaultValue": "no"
    },
    "storageType": {
      "type": "string",
      "metadata": {
        "description": "Type of storage account."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix string for storage account name."
      }
    },
    "vNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network."
      }
    },
    "vNetRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of the virtual network."
      }
    },
    "subnetDBRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of first subnet."
      }
    },
    "subnetWebRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of second subnet."
      }
    },
    "webLBIP": {
      "type": "string",
      "metadata": {
        "description": "IP to support Web Load Balancing"
      }
    },
    "subnetSBRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of first subnet."
      }
    },
    "subnetSrvRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of second subnet."
      }
    },
    "subnetMgtRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of first subnet."
      }
    },
    "subnetTstRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of second subnet."
      }
    },
    "subnetAGSRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of second subnet."
      }
    },
    "subnetVPNRange": {
      "type": "string",
      "metadata": {
        "description": "IP range of second subnet."
      }
    },
    "vmManagementAdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ManangementAdmin"
    },
    "vmManagementAdminPassword": {
      "type": "securestring"
    },
    "vmSBSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D1_v2"
    },
    "cfgSBServerCount": {
      "type": "int",
      "defaultValue": 2
    },
    "appSBServerCount": {
      "type": "int",
      "defaultValue": 2
    },
    "vmTestSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D1_v2"
    },
    "testServerCount": {
      "type": "int",
      "defaultValue": 1
    },
    "vmWebSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D1_v2"
    },
    "WebServerCount": {
      "type": "int",
      "defaultValue": 2
    },
    "vmServicesSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D1_v2"
    },
    "ServicesServerCount": {
      "type": "int",
      "defaultValue": 2
    },
    "existingdiagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of an existing storage account to which diagnostics data will be transferred."
      }
    },
    "existingdiagnosticsStorageResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The resource group for the storage account specified in existingdiagnosticsStorageAccountName"
      }
    }
  },
  "variables": {
    "deploymentApiVersion": "2016-02-01",
    "storageApiVersion": "2015-06-15",
    "vNetApiVersion": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "VNetDeployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'VNet.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vNetName": { "value": "[parameters('vNetName')]" },
          "vNetApiVersion": { "value": "[variables('vNetApiVersion')]" },
          "vNetRange": { "value": "[parameters('vNetRange')]" },
          "subnetDBRange": { "value": "[parameters('subnetDBRange')]" },
          "subnetWebRange": { "value": "[parameters('subnetWebRange')]" },
          "subnetSBRange": { "value": "[parameters('subnetSBRange')]" },
          "subnetSrvRange": { "value": "[parameters('subnetSrvRange')]" },
          "subnetMgtRange": { "value": "[parameters('subnetMgtRange')]" },
          "subnetTstRange": { "value": "[parameters('subnetTstRange')]" },
          "subnetAGSRange": { "value": "[parameters('subnetAGSRange')]" },
          "subnetVPNRange": { "value": "[parameters('subnetVPNRange')]" },
          "vmMgmtPrivatePublicIPDnsName": { "value": "ex-managment-ipdns" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "StorageDeployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'BaseStorage.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageType": { "value": "[parameters('storageType')]" },
          "storageApiVersion": { "value": "[variables('storageApiVersion')]" },
          "storageAccountNamePrefix": { "value": "[parameters('storageAccountNamePrefix')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "MainDBVMDeployment",
      "condition": "[equals(parameters('deployDBVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'DBMain.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-DB')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }

        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "WebDBVMDeployment",
      "condition": "[equals(parameters('deployWebVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'DBWeb.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Web')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "ManagmentVMDeployment",
      "condition": "[equals(parameters('deployMgtVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'ManagementVM.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Management')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" },
         
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "GenPopSBDeployment",
      "condition": "[equals(parameters('deployGENPOPSBVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'SBFarm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "sbFarmNamePrefix": { "value": "GenPop" },
          "vmSize": { "value": "[parameters('vmSBSize')]" },
          "cfgServerCount": { "value": "[parameters('cfgSBServerCount')]" },
          "appServerCount": { "value": "[parameters('appSBServerCount')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "BACSBDeployment",
      "condition": "[equals(parameters('deployBACSBVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'SBFarm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "sbFarmNamePrefix": { "value": "BAC" },
          "vmSize": { "value": "[parameters('vmSBSize')]" },
          "cfgServerCount": { "value": "[parameters('cfgSBServerCount')]" },
          "appServerCount": { "value": "[parameters('appSBServerCount')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "WFSBDeployment",
      "condition": "[equals(parameters('deployWFSBVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'SBFarm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "sbFarmNamePrefix": { "value": "WF" },
          "vmSize": { "value": "[parameters('vmSBSize')]" },
          "cfgServerCount": { "value": "[parameters('cfgSBServerCount')]" },
          "appServerCount": { "value": "[parameters('appSBServerCount')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "ChacGenPopSBDeployment",
      "condition": "[equals(parameters('deployCHASESBVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'SBFarm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "sbFarmNamePrefix": { "value": "CHASE" },
          "vmSize": { "value": "[parameters('vmSBSize')]" },
          "cfgServerCount": { "value": "[parameters('cfgSBServerCount')]" },
          "appServerCount": { "value": "[parameters('appSBServerCount')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "TestDeployment",
      "type": "Microsoft.Resources/deployments",
      "condition": "[equals(parameters('deployTestVM'),'yes')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'TestVM.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "vmSize": { "value": "[parameters('vmTestSize')]" },
          "testServerCount": { "value": "[parameters('testServerCount')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" },
          "existingdiagnosticsStorageAccountName": { "value": "[parameters('existingdiagnosticsStorageAccountName')]" },
          "existingdiagnosticsStorageResourceGroup": { "value": "[parameters('existingdiagnosticsStorageResourceGroup')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "WebDeployment",
      "condition": "[equals(parameters('deployWebVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'WebVM.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Web')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "vmSize": { "value": "[parameters('vmWebSize')]" },
          "webServerCount": { "value": "[parameters('webServerCount')]" },
          "webLBIP": { "value": "[parameters('webLBIP')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "AGSDeployment",
      "condition": "[equals(parameters('deployAGSVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'AGS.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-AGS')]" },
          "baseTemplateUri": { "value": "[parameters('baseTemplateUri')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "ServicesDeployment",
      "condition": "[equals(parameters('deploySRVVM'),'yes')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','StorageDeployment')]",
        "[concat('Microsoft.Resources/deployments/', 'VNetDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseTemplateUri'), '/shared/', 'ServicesVM.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": { "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), 'subnet-Managment')]" },
          "vmStorageAccountName": { "value": "[reference('StorageDeployment').outputs.storageAccountName.value]" },
          "vmAdminUserName": { "value": "[parameters('vmManagementAdminUserName')]" },
          "vmAdminPassword": { "value": "[parameters('vmManagementAdminPassword')]" },
          "vmSize": { "value": "[parameters('vmServicesSize')]" },
          "ServicesServerCount": { "value": "[parameters('servicesServerCount')]" },
          "shutDownTime": { "value": "[parameters('shutDownTime')]" },
          "startUpTime": { "value": "[parameters('startUpTime')]" },
          "configureAutoStartStop": { "value": "[parameters('configureAutoStartStop')]" }
        }
      }
    }
  ],
    "outputs": {}
  }
