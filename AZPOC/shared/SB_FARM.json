{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "shutDownTime": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "1200",
      "metadata": {
        "description": "Global shut Down Time for VM's Created"
      }
    },
    "configureAutoStartStop": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "no",
      "metadata": {
        "description": "Determines if auto Start and Stop is configured on VMs"
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ManangementAdmin"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "01",
      "minLength": 2
    },
    "Prefix": {
      "type": "string",
      "defaultValue": "AZPOC",
      "minLength": 1

    },

    "cfgsubnetID": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "SBCFGLBIP": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "SBAPPLBIP": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "appsubnetID": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "sqlsubnetID": {
      "type": "string",
      "metadata": {
        "description": "Virtual network subnet reference."
      }
    },
    "DeploymentInfo": {
      "type": "object",
      "metadata": {
        "description": "Can be used to input LB/VM Etc objects from Parameters file"
      }
    },
    "vmStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Storage reference for VM "
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "subscriptionId": "[subscription().subscriptionId]",
    "resourceGroupName": "[resourceGroup().name]",
    "vmWindowsOSVersion": "2012-R2-Datacenter",
    "vmSize": "Standard_D1",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "vmImageOffer": "WindowsServer",
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('DeploymentID'))]",
    "SB-CFGServers": "[parameters('DeploymentInfo').VMSBCFG]",
    "SB-APPServers": "[parameters('DeploymentInfo').VMSBAPP]",
    "DataDiskInfo": {

      "STD": [
        {
          "name": "-data-DATA00",
          "lun": 0,
          "caching": "ReadOnly",
          "diskSizeGB": "127",
          "createOption": "Empty"
        },
        {
          "name": "-data-LOGS01",
          "lun": 4,
          "caching": "None",
          "diskSizeGB": "127",
          "createOption": "Empty"
        },
        {
          "name": "-data-TEMPDB01",
          "lun": 5,
          "caching": "ReadOnly",
          "diskSizeGB": "127",
          "createOption": "Empty"
        },
        {
          "name": "-data-BACKUP00",
          "lun": 6,
          "caching": "None",
          "diskSizeGB": "127",
          "createOption": "Empty"
        }
      ],

      "2": [
        {
          "name": "-data-DATA00",
          "lun": 0,
          "caching": "ReadOnly",
          "diskSizeGB": "1023",
          "createOption": "Empty"
        },
        {
          "name": "-data-DATA01",
          "lun": 1,
          "caching": "ReadOnly",
          "diskSizeGB": "1023",
          "createOption": "Empty"
        }
      ]
    },
    "SB-SQL-DSC1ArchiveFolder": "DSC",
    "SB-SQL-DSC1ArchiveFileName": "SB-SQL-DSC1.zip",
    "SB-APP-DSC1ArchiveFolder": "DSC",
    "SB-APP-DSC1ArchiveFileName": "SB-APP-DSC1.zip",
    "LBInfo": [
      {
        "LBName": "-ilbSQL",
        "ASName": "SQL",
        "SNName": "BE01",
        "Services": [
          {
            "LBFEName": "SQLEDG01",
            "LBFEIP": "219",
            "LBFEPort": 1433,
            "LBBEPort": 1433,
            "LBBEProbePort": 59999
          },
          {
            "LBFEName": "SQLEDG02",
            "LBFEIP": "218",
            "LBFEPort": 1433,
            "LBBEPort": 1432,
            "LBBEProbePort": 59998
          },
          {
            "LBFEName": "SQLOCR01",
            "LBFEIP": "217",
            "LBFEPort": 1433,
            "LBBEPort": 1431,
            "LBBEProbePort": 59997
          }
        ]
      },
      {
        "LBName": "-ilbCMB",
        "ASName": "CMB",
        "SNName": "MT01",
        "Services": [
          {
            "LBFEName": "CMB",
            "LBFEIP": "126",
            "LBFEPort": 80,
            "LBBEPort": 80,
            "LBBEProbePort": 80
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "name": "[concat(variables('Deployment'),'-SBConfigLB')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [

      ],
      "tags": {
        "displayName": "SBCFGLB"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "privateIPAddress": "[parameters('SBCFGLBIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[parameters('cfgsubnetID')]"
              }
            },
            "name": "FrontEndWebPool"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackEndWebPool"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/frontendIpConfigurations/FrontEndWebPool')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/backendAddressPools/BackEndWebPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/probes/SB-Cfg-lb-probe')]"

              },
              "protocol": "Tcp",
              "frontendPort": 47003,
              "backendPort": 47003,
              "idleTimeoutInMinutes": 15
            },
            "name": "SSB_PORT_CONFIGURATION-rule"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/frontendIpConfigurations/FrontEndWebPool')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/backendAddressPools/BackEndWebPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBConfigLB')),'/probes/SB-Cfg-lb-probe')]"

              },
              "protocol": "Tcp",
              "frontendPort": 47002,
              "backendPort": 47002,
              "idleTimeoutInMinutes": 15
            },
            "name": "SB_PORT_PUBSUB-rule"
          }

        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 47003,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "SB-Cfg-lb-probe"
          }

        ]
      }


    },
    {
      "name": "[concat(variables('Deployment'),'-SBAppLB')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [

      ],
      "tags": {
        "displayName": "SBAPPLB"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "privateIPAddress": "[parameters('SBAPPLBIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[parameters('appsubnetID')]"
              }
            },
            "name": "FrontEndWebPool"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackEndWebPool"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBAppLB')),'/frontendIpConfigurations/FrontEndWebPool')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBAppLB')),'/backendAddressPools/BackEndWebPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',concat(variables('Deployment'),'-SBAppLB')),'/probes/SB-App-lb-probe')]"

              },
              "protocol": "Tcp",
              "frontendPort": 47000,
              "backendPort": 47000,
              "idleTimeoutInMinutes": 15
            },
            "name": "SB-App-lb-rule"
          }

        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "SB-App-lb-probe"
          }

        ]
      }


    },

    {
      "name": "[concat(variables('Deployment'),'-asSB-CFG')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [],
      "sku": {
        "name": "Aligned"
      },
      "location": "[resourceGroup().location]",
      

      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      },
      "tags": {
        "displayName": "ConfigAvailabilitySet"
      }
    },
    {
      "name": "[concat(variables('Deployment'),'-asSB-APP')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
     

      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      },
      "tags": {
        "displayName": "AppAvailabilitySet"
      }
    },
   
    {
      "name": "[concat(variables('Deployment'),'-nic',variables('SB-CFGServers')[copyIndex(0)].VMName)]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "copy": {
        "count": "[length( variables('SB-CFGServers') )]",
        "name": "vmConfigNicCopy"
      },
      "dependsOn": [
      ],
      "tags": {
        "displayName": "vmSB-CFG_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('cfgsubnetID')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('Deployment'),'-nic',variables('SB-APPServers')[copyIndex(0)].VMName)]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "copy": {
        "count": "[length( variables('SB-APPServers') )]",
        "name": "vmAppNicCopy"
      },
      "dependsOn": [
      ],
      "tags": {
        "displayName": "vmSB-APP_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('appsubnetID')]"
              }
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[equals('yes','yes')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "name": "[concat(variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName)]",
      "copy": {
        "name": "vmLoop",
        "count": "[length(variables('SB-CFGServers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('Deployment'),'-nic',variables('SB-CFGServers')[copyIndex(0)].VMName))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(variables('Deployment'),'-asSB-CFG'))]"
      ],
      "tags": {
        "displayName": "vmSB-CFG-managed"

      },
      "properties": {
        "licenseType": "Windows_Server",
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('Deployment'),'-asSB-CFG'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('SB-CFGServers')[copyIndex(0)].VMName]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "secrets": []
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('Deployment'),variables('SB-CFGServers')[copyIndex(0)].VMName, '-OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"

            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount])]",
              "input": {
                "name": "[concat(variables('Deployment'),variables('SB-CFGServers')[copyIndex(0)].VMName, variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].name)]",
                "lun": "[variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].lun]",
                "caching": "[variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].caching]",
                "diskSizeGB": "[variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].diskSizeGB]",
                "createOption": "[variables('DataDiskInfo')[variables('SB-CFGServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].createOption]",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('Deployment'),'-nic',variables('SB-CFGServers')[copyIndex(0)].VMName))]"
            }
          ]
        }


      },
      "resources": [
        {
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName)]",
          "apiVersion": "2016-05-15",
          "location": "[resourceGroup().location]",
          "condition": "[equals(parameters('configureAutoStartStop'),'yes')]",
          "scale": null,
          "tags": {
            "displayName": "Shutdown"
          },
          "properties": {
            "dailyRecurrence": {
              "time": "[parameters('shutDownTime')]"
            },
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 30
            },
            "provisioningState": "Succeeded",
            "status": "Enabled",
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName))]",
            "taskType": "ComputeVmShutdownTask",
            "timeZoneId": "UTC"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName))]"
          ]
        }
        //{
        //  "name": "Microsoft.Powershell.DSC",
        //  "type": "extensions",
        //  "location": "[resourceGroup().location]",
        //  "apiVersion": "2016-03-30",
        //  "dependsOn": [
        //    "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName))]"
        //  ],
        //  "tags": {
        //    "displayName": "SB-APP-DSC1"
        //  },
        //  "properties": {
        //    "publisher": "Microsoft.Powershell",
        //    "type": "DSC",
        //    "typeHandlerVersion": "2.9",
        //    "autoUpgradeMinorVersion": true,
        //    "settings": {
        //      "configuration": {
        //        "url": "[concat(parameters('_artifactsLocation'), '/', variables('SB-APP-DSC1ArchiveFolder'), '/', variables('SB-APP-DSC1ArchiveFileName'))]",
        //        "script": "SB-APP-DSC1.ps1",
        //        "function": "Main"
        //      },
        //      "configurationArguments": {
        //        "nodeName": "[concat(variables('Deployment'), '-vm', variables('SB-CFGServers')[copyIndex(0)].VMName)]"
        //      }
        //    },
        //    "protectedSettings": {
        //      "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
        //    }
        //  }
        //}
      ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[equals('yes','yes')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "name": "[concat(variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName)]",
      "copy": {
        "name": "vmLoop",
        "count": "[length(variables('SB-APPServers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('Deployment'),'-nic',variables('SB-APPServers')[copyIndex(0)].VMName))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(variables('Deployment'),'-asSB-APP'))]"
      ],
      "tags": {
        "displayName": "vmSB-APP-managed"

      },
      "properties": {
        "licenseType": "Windows_Server",
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('Deployment'),'-asSB-APP'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('SB-APPServers')[copyIndex(0)].VMName]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "secrets": []
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('Deployment'),variables('SB-APPServers')[copyIndex(0)].VMName, '-OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"

            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount])]",
              "input": {
                "name": "[concat(variables('Deployment'),variables('SB-APPServers')[copyIndex(0)].VMName, variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].name)]",
                "lun": "[variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].lun]",
                "caching": "[variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].caching]",
                "diskSizeGB": "[variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].diskSizeGB]",
                "createOption": "[variables('DataDiskInfo')[variables('SB-APPServers')[copyIndex(0)].DataDCount][copyIndex('dataDisks')].createOption]",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('Deployment'),'-nic',variables('SB-APPServers')[copyIndex(0)].VMName))]"
            }
          ]
        }


      },
      "resources": [
        {
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName)]",
          "apiVersion": "2016-05-15",
          "location": "[resourceGroup().location]",
          "condition": "[equals(parameters('configureAutoStartStop'),'yes')]",
          "scale": null,
          "tags": {
            "displayName": "Shutdown"
          },
          "properties": {
            "dailyRecurrence": {
              "time": "[parameters('shutDownTime')]"
            },
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 30
            },
            "provisioningState": "Succeeded",
            "status": "Enabled",
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName))]",
            "taskType": "ComputeVmShutdownTask",
            "timeZoneId": "UTC"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName))]"
          ]
        }
        //{
        //  "name": "Microsoft.Powershell.DSC",
        //  "type": "extensions",
        //  "location": "[resourceGroup().location]",
        //  "apiVersion": "2016-03-30",
        //  "dependsOn": [
        //    "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName))]"
        //  ],
        //  "tags": {
        //    "displayName": "SB-APP-DSC1"
        //  },
        //  "properties": {
        //    "publisher": "Microsoft.Powershell",
        //    "type": "DSC",
        //    "typeHandlerVersion": "2.9",
        //    "autoUpgradeMinorVersion": true,
        //    "settings": {
        //      "configuration": {
        //        "url": "[concat(parameters('_artifactsLocation'), '/', variables('SB-APP-DSC1ArchiveFolder'), '/', variables('SB-APP-DSC1ArchiveFileName'))]",
        //        "script": "SB-APP-DSC1.ps1",
        //        "function": "Main"
        //      },
        //      "configurationArguments": {
        //        "nodeName": "[concat(variables('Deployment'), '-vm', variables('SB-APPServers')[copyIndex(0)].VMName)]"
        //      }
        //    },
        //    "protectedSettings": {
        //      "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
        //    }
        //  }
        //}
      ]
    }
  ],
  "outputs": {
  }
}
